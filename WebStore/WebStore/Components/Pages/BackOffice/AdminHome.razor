@page "/adminhome"
@inject NavigationManager NavigationManager
@inject AuthService AuthService
@layout WebStore.Components.Layout.BackOffice.MainBackLayout

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

<PageTitle>Admin</PageTitle>

<AuthorizeView Roles="Admin">
    <Authorized>
        <h3>Bem-vindo, administrador!</h3>

        <RadzenButton Text="Logout"
                      Click="Logout"
                      Style="margin-top: 20px;"
                      ButtonStyle="ButtonStyle.Danger" />
    </Authorized>
    <NotAuthorized>
        <p>Acesso negado. Redirecionando...</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (!user.Identity.IsAuthenticated || !user.IsInRole("Admin"))
        {
            NavigationManager.NavigateTo("/adminlogin", forceLoad: true);
        }
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/admindoor");
    }
}

